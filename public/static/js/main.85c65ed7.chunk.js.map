{"version":3,"sources":["components/Navbar.js","components/Error404.js","components/ClubPage.js","components/ViewClub.js","components/SearchResult.js","components/Searching.js","components/SearchPage.js","components/Interests.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","href","acc","student","club","Component","Error404","subcontent","","subbed","loading","ClubPage","subscribe","asyncToGenerator","regenerator_default","mark","_callee","adding","res","wrap","_context","prev","next","setState","fetch","url","method","body","_id","sent","json","stop","window","location","protocol","hostname","name","username","style","marginBottom","showsub","id","onClick","disabled","showedit","commaspace","tags","officers","meetingdates","description","str","replace","console","log","process","ViewClub","buttons","edit","exists","components_ClubPage","assign","components_Error404","parser","Parser","match","params","data","parse","subscribed","isowner","SearchResult","react_router_dom","to","Searching","SearchPage","searchtext","clubs","searching","query","search","substring","split","shift","event","key","components_Searching","qs","stringify","history","push","clubres","map","val","components_SearchResult","target","value","length","_this2","onKeyPress","processKeyPress","type","placeholder","autoComplete","onChange","updateSearchText","Interests","submittags","selectedtags","interests","onbeforeunload","tag","indexOf","update","textAlign","marginTop","temptags","curridx","splice","undefined","Profile","user","subscriptions","marginLeft","components_Interests","marginRight","App","accType","components_Navbar","react_router","path","component","exact","render","components_ViewClub","Boolean","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85c65ed7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Navbar extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='navbar'>\r\n\t\t\t\t<div className='navcont navleft'>\r\n\t\t\t\t\t<a className='mainlogonav' href='/'> clubsource</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='navcont navright'>\r\n\t\t\t\t\t{this.props.acc.student ? <a className='navlink' href='/profile'>Profile</a> : null}\r\n\t\t\t\t\t{this.props.acc.club ? <a className='navlink' href='/dashboard'>Dashboard</a> : null}\r\n\t\t\t\t\t<a className='navlink' href='/clubs'> Browse Clubs</a>\r\n\t\t\t\t\t{this.props.acc.club || this.props.acc.student ? \r\n\t\t\t\t\t\t<a className='navlink' href='/accounts/logout'>Log Out</a> : \r\n\t\t\t\t\t\t<a className='navlink' href='/accounts/login'>Log In</a>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport Navbar from './Navbar';\r\n\r\nclass Error404 extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className='title'>Page not found</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Error404;","import React, { Component } from 'react';\r\n\r\nconst subcontent = {\r\n\t'': 'Subscribe',\r\n\tsubbed: 'Unsubscribe',\r\n\tloading: 'Loading...'\r\n}\r\n\r\nclass ClubPage extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsubbed: this.props.subbed,\r\n\t\t\turl: window.location.protocol + '//' + (window.location.hostname==='localhost' ? 'localhost:3000' : window.location.hostname),\r\n\t\t};\r\n\t}\r\n\t\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='info'>\r\n\t\t\t\t<h2 className='clubtitle'>{this.props.name}</h2>\r\n\t\t\t\t<p className='username'>{this.props.username}</p>\r\n\t\t\t\t<div className='text-center' style={{marginBottom: '10px'}}>\r\n\t\t\t\t\t{this.props.showsub ? \r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\tclassName={'clubbutton subscribe ' + this.state.subbed} \r\n\t\t\t\t\t\t\tid='subscribe' \r\n\t\t\t\t\t\t\tonClick={this.subscribe} \r\n\t\t\t\t\t\t\tdisabled={this.state.subbed==='loading'}>\r\n\t\t\t\t\t\t\t{subcontent[this.state.subbed]}\r\n\t\t\t\t\t\t</button> \r\n\t\t\t\t\t: null}\r\n\t\t\t\t\t{this.props.showedit ? <a className='clubbutton edit' href='/myclub/dashboard/edit'>Edit</a> : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className='middle'>\r\n\t\t\t\t\t<p>Tags: {this.commaspace(this.props.tags)}</p>\r\n\t\t\t\t\t<p>Officers: {this.commaspace(this.props.officers)}</p>\r\n\t\t\t\t\t<p className='nomargin'>Meeting dates: {this.props.meetingdates}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className='quillcontent'>{this.props.description}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n\tcommaspace(str){\r\n\t\treturn (str ? str.replace(/,/g, ', ') : '');\r\n\t}\r\n\t\r\n\tsubscribe = async() => {\r\n\t\tlet adding = this.state.subbed==='';\r\n\t\tthis.setState({subbed: 'loading'});\r\n\t\tconst res = await fetch(this.state.url + '/searchData/subscribe', {\r\n\t\t\tmethod: 'post',\r\n\t\t\tbody: {\r\n\t\t\t\tclub: this.props._id,\r\n\t\t\t\tadding: adding\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst result = await res.json();\r\n\t\tif (adding)\r\n\t\t\tthis.setState({subbed: 'subbed'});\r\n\t\telse\r\n\t\t\tthis.setState({subbed: ''});\r\n\t}\r\n}\r\n\r\nexport default ClubPage;","import React, { Component } from 'react';\r\nimport '../clubview.css';\r\nimport { Parser } from 'html-to-react';\r\nimport Error404 from './Error404';\r\nimport ClubPage from './ClubPage';\r\n\r\n\r\nconsole.log(process.env.NODE_ENV);\r\n\r\nclass ViewClub extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tclub: {},\r\n\t\t\tbuttons: {\r\n\t\t\t\tsubscribe: false,\r\n\t\t\t\tedit: false\r\n\t\t\t},\r\n\t\t\texists: true,\r\n\t\t\turl: window.location.protocol + '//' + (window.location.hostname==='localhost' ? 'localhost:3000' : window.location.hostname)\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='container-fluid'>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col sidead'>\r\n\t\t\t\t\t\tLeft Ad\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='col'>\r\n\t\t\t\t\t\t{this.state.exists ? \r\n\t\t\t\t\t\t\t<ClubPage {...this.state.club} \r\n\t\t\t\t\t\t\t\tshowedit=/*{this.state.club.isowner}*/{true} \r\n\t\t\t\t\t\t\t\tshowsub=/*{this.props.accType.student}*/{true} \r\n\t\t\t\t\t\t\t\tsubbed='' /> : \r\n\t\t\t\t\t\t\t<Error404 />}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='col sidead'>\r\n\t\t\t\t\t\tRight Ad \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t);\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tasync componentDidMount() {\r\n\t\t\r\n\t\tvar parser = new Parser();\r\n\t\tvar username = this.props.match.params.username;\r\n\t\tconst res = await fetch(this.state.url + '/searchData/' + username); //Put error handling here\r\n\t\tconst data = await res.json();\r\n\t\tif (data === 'not found') {\r\n\t\t\tconsole.log('page not found');\r\n\t\t\tthis.setState({exists: false});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdata.club.description = parser.parse(data.club.description);\r\n\t\tthis.setState({club: data.club});\r\n\t\tlet buttons = {};\r\n\t\tbuttons.subscribe = data.subscribed;\r\n\t\tbuttons.edit = data.isowner;\r\n\t\tthis.setState({buttons: buttons});\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\nexport default ViewClub;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SearchResult extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Link to={'clubs/' + this.props.username} className='resultlink'>\r\n\t\t\t\t<div className='fullresult'>\r\n\t\t\t\t\t<div className='resulthead'>\r\n\t\t\t\t\t\t<h1 className='resulttitle'>{this.props.name}</h1>\r\n\t\t\t\t\t\t<p className='taglist'>Tags: {this.props.tags.replace(/,/g, ', ')}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchResult;","import React, { Component } from 'react';\r\n\r\nclass Searching extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<p className='text-center'>Searching...</p>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Searching;","import React, { Component } from 'react';\r\nimport '../search.css';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchResult from './SearchResult';\r\nimport Searching from './Searching';\r\nimport qs from 'qs';\r\n\r\n\r\n\r\n/*\r\nTODO: When this component is called:\r\n\t*If there is a query string...\r\n\t\t*Parse it\r\n\t\t*Query the /searchData API with the query string data\r\n\t\t*Sort and present SearchItem components\r\n\t*If there isn't a query string, query the /searchData API for the user's default preferences\r\n\t\t\t*If they exist (the user is logged in and has configured his preferences), sort and present SearchItem components\r\n\t\t\t*If they don't exist, display a message with a link telling them to configure their preferences or put in a search\r\n\r\n\r\n*/\r\n\r\n\r\nclass SearchPage extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsearchtext: '',\r\n\t\t\tclubs: [],\r\n\t\t\tsearching: '',\r\n\t\t\turl: window.location.protocol + '//' + (window.location.hostname==='localhost' ? 'localhost:3000' : window.location.hostname),\r\n\t\t};\r\n\t}\r\n\t\r\n\tasync componentDidMount() {\r\n\t\tvar query = this.props.location.search;\r\n\t\tconsole.log('query string: ' + query);\r\n\t\tif (query != '') {\r\n\t\t\tlet search = this.props.location.search.substring(1).split('search=');\r\n\t\t\tsearch.shift();\r\n\t\t\tconsole.log(search[0]);\r\n\t\t\t\r\n\t\t\tawait this.setState({searchtext: search[0].replace(/_/g, ' ')});\r\n\t\t}\r\n\t\tthis.search();\r\n\t}\r\n\t\r\n\tprocessKeyPress(event){\r\n\t\tif (event.key == 'Enter')\r\n\t\t\tthis.search();\r\n\t}\r\n\t\r\n\tasync search() {\r\n\t\tthis.setState({clubs: []});\r\n\t\tthis.setState({searching: <Searching />});\r\n\t\tconsole.log('qs stringification: ' + qs.stringify({search: this.state.searchtext}));\r\n\t\tif (this.state.searchtext !== ''){\r\n\t\t\tlet search = qs.stringify({search: this.state.searchtext});\r\n\t\t\tawait this.props.history.push('?' + search);\r\n\t\t\tconsole.log('query string: ' + search);\r\n\t\t\t//search = search.substring(1).toLowerCase().replace(/ /g, '_');\r\n\t\t\tconsole.log('searching for ' + search);\r\n\t\t\tconst res = await fetch(this.state.url + '/searchData/search/' + search);\r\n\t\t\tconst clubres = await res.json();\r\n\t\t\tthis.setState({clubs: clubres.map((val) => <SearchResult {...val} key={val.username}/>), searching: ''});\r\n\t\t\t//TODO: create error handling so that this doesn't break if someone types a poorly formatted query string\r\n\t\t\t//TODO: have this query to find the appropriate ads to render\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst res = await fetch(this.state.url + '/searchData/getdefault');\r\n\t\t\tconst data = await res.json();\r\n\t\t\tconsole.log(data);\r\n\t\t\tthis.setState({clubs: data.map((val) => <SearchResult {...val} key={val.username}/>), searching: ''});\r\n\t\t}\r\n\t\t\t\r\n\t}\r\n\t\r\n\tupdateSearchText(event){\r\n\t\tif (event.target.value[event.target.value.length - 1] !== '_')\r\n\t\t\tthis.setState({\r\n\t\t\t\tsearchtext: event.target.value\r\n\t\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className='title'>Find Clubs</h1>\r\n\t\t\t\t<div className='fullsearchwrap'>\r\n\t\t\t\t\t<div className='searchbarwrap'>\r\n\t\t\t\t\t\t<div className='searchbar' onKeyPress={event => this.processKeyPress(event)}>\r\n\t\t\t\t\t\t\t<input id='searchtext' \r\n\t\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\t\tname='search' \r\n\t\t\t\t\t\t\t\tplaceholder='Find a club...' \r\n\t\t\t\t\t\t\t\tautoComplete='off' \r\n\t\t\t\t\t\t\t\tonChange={event => this.updateSearchText(event)} \r\n\t\t\t\t\t\t\t\tvalue={this.state.searchtext} />\r\n\t\t\t\t\t\t\t<button className='bigbutton' id='searchbutton' onClick={() => this.search()}>Search</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='container-fluid'>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col sidead'>\r\n\t\t\t\t\t\t\tLeft Ad\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className='col'>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{this.state.searching}\r\n\t\t\t\t\t\t\t{this.state.clubs}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className='col sidead'>\r\n\t\t\t\t\t\t\tRight Ad\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchPage;","import React, { Component } from 'react';\r\n//import { Button } from 'react-router-dom';\r\n\r\nconst tags = [\r\n\t'animals',\r\n\t'art',\r\n\t'business',\r\n\t'community/local',\r\n\t'competition',\r\n\t'culture',\r\n\t'debate',\r\n\t'economics/finance',\r\n\t'entertainment',\r\n\t'government/politics',\r\n\t'health',\r\n\t'history',\r\n\t'honor society',\r\n\t'language',\r\n\t'leadership',\r\n\t'math',\r\n\t'music',\r\n\t'public speaking',\r\n\t'science',\r\n\t'social advocacy',\r\n\t'sports',\r\n\t'technology',\r\n\t'volunteering/charity/community service',\r\n\t'writing'\r\n];\r\n\r\nclass Interests extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tselectedtags: []\r\n\t\t};\r\n\t}\r\n\t\r\n\tcomponentWillMount() {\r\n\t\tconsole.log('component will mount running');\r\n\t\tthis.setState({selectedtags: this.props.interests});\r\n\t\twindow.onbeforeunload = this.submittags;\r\n\t\t/*console.log('props');\r\n\t\tconsole.log(this.props);\r\n\t\tlet temptags = [];\r\n\t\tfor (let tag of tags){\r\n\t\t\ttemptags.push({tag: tag, selected: this.props.interests.indexOf(tag) !== -1});\r\n\t\t}\r\n\t\tconsole.log('tag list');\r\n\t\tconsole.log(temptags);\r\n\t\tthis.setState({tags: temptags});*/\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t\t\r\n\t\treturn (\r\n\t\t\t<div className='interestcontainer'>\r\n\t\t\t\t{tags.map((tag) => <div \r\n\t\t\t\t\tclassName={'interest' + (this.state.selectedtags.indexOf(tag) === -1 ? '': ' selected')}\r\n\t\t\t\t\tonClick={() => this.update(tag)}\r\n\t\t\t\t\tkey={tag}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t{tag}\r\n\t\t\t\t</div>)}\r\n\t\t\t\t<div style={{textAlign: 'center', marginTop: '20px'}}>\r\n\t\t\t\t\t<button className='bigbutton' onClick={this.submittags}>Save Changes </button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n\tsubmittags = () => {\r\n\t\t//let temptags = this.state.selectedtags;\r\n\t\t//console.log(temptags);\r\n\t\tfetch(this.props.url + '/profileData/updatetags', {\r\n\t\t\tmethod: 'post',\r\n\t\t\tbody: this.state.selectedtags\r\n\t\t});\r\n\t}\r\n\t\r\n\tupdate(tag) {\r\n\t\tlet temptags = this.state.selectedtags;\r\n\t\tlet curridx = temptags.indexOf(tag);\r\n\t\tif (curridx === -1)\r\n\t\t\ttemptags.push(tag);\r\n\t\telse\r\n\t\t\ttemptags.splice(curridx, 1);\r\n\t\tthis.setState({selectedtags: temptags});\r\n\t\tconsole.log(this.state.selectedtags);\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tthis.submittags();\r\n\t\twindow.onbeforeunload = undefined;\r\n\t}\r\n}\r\n\r\nexport default Interests;","import React, { Component } from 'react';\r\nimport Interests from './Interests';\r\nimport SearchResult from './SearchResult';\r\nimport '../profile.css';\r\n\r\nclass Profile extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tuser: {\r\n\t\t\t\tinterests: [],\r\n\t\t\t\tsubscriptions: []\r\n\t\t\t},\r\n\t\t\turl: window.location.protocol + '//' + (window.location.hostname==='localhost' ? 'localhost:3000' : window.location.hostname),\r\n\t\t};\r\n\t}\r\n\t\r\n\t\r\n\trender() {\r\n\t\tconsole.log('props');\r\n\t\tconsole.log(this.props);\r\n\t\treturn (\r\n\t\t\t<div className='container-fluid'>\r\n\t\t\t\t<h1 className='title'>Profile</h1>\r\n\t\t\t\t<div className='row' style={{marginBottom: '40px'}}>\r\n\t\t\t\t\t<div className='col-md profilesection' style={{'marginLeft': '20px'}}>\r\n\t\t\t\t\t\t<h2 className='prosectionheader'>Interests</h2>\r\n\t\t\t\t\t\t{this.state.user.interests.length ? null : <p className='gray'><em>Configuring your interests allows Clubsource to suggest clubs that you might like.</em></p>}\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Interests interests={this.state.user.interests} url={this.state.url}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-md profilesection' style={{'marginRight': '20px'}}>\r\n\t\t\t\t\t\t<h2 className='prosectionheader'>Subscriptions</h2>\r\n\t\t\t\t\t\t{this.state.user.subscriptions.length ? null : <p className='gray'><em>Clubs that you subscribe to will appear here so that you can easily find them. To suscribe to a club, visit its page and click the subscribe button. To find clubs, click browse clubs.</em></p>}\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t{this.state.user.subscriptions.map((val) => <SearchResult {...val} key={val.username} /> )} \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n\tasync componentDidMount(){\r\n\t\tconsole.log(this.state.url);\r\n\t\tconst res = await fetch(this.state.url + '/profileData/user');\r\n\t\tconst user = await res.json();\r\n\t\tif (!user)\r\n\t\t\twindow.location.href = '/auth/google';\r\n\t\tconsole.log('user data retrieved');\r\n\t\tconsole.log(user);\r\n\t\tthis.setState({user: user});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/*updateTags(tags){\r\n\t\tconsole.log('updating tags');\r\n\t\tfetch(this.state.url + '/profileData/updatetags', {\r\n\t\t\tmethod: 'post',\r\n\t\t\tbody: JSON.stringify(tags)\r\n\t\t});\r\n\t}*/\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ViewClub from './components/ViewClub';\nimport SearchPage from './components/SearchPage';\nimport Navbar from './components/Navbar';\nimport Profile from './components/Profile';\n\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\turl: window.location.protocol + '//' + (window.location.hostname==='localhost' ? 'localhost:3000' : window.location.hostname),\n\t\t\taccType: {\n\t\t\t\tclub: false,\n\t\t\t\tstudent: false\n\t\t\t}\n\t\t};\n\t}\n\tasync componentDidMount() {\n\t\tconst res = await fetch(this.state.url + '/accounts/type');\n\t\tconst accType = await res.json();\n\t\tawait this.setState({accType: accType});\n\t\tconsole.log('club type:');\n\t\tconsole.log(this.state.accType);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar acc={this.state.accType}/>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/profile' component={Profile} />\n\t\t\t\t\t<Route exact path='/clubs/:username' render={(props) => <ViewClub {...props} accType={this.state.accType} />} />\n\t\t\t\t\t<Route exact path='/clubs' component={SearchPage} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport './reactstyles.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n\n\nReactDOM.render((\n\t<Router>\n\t\t<App />\n\t</Router>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}