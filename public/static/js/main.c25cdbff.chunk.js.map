{"version":3,"sources":["components/Navbar.js","components/Error404.js","components/ViewClub.js","components/SearchResult.js","components/Searching.js","components/SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["DEV_URL","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","href","Component","Error404","console","log","process","ViewClub","club","exists","parser","Parser","username","match","params","fetch","res","json","setState","forceUpdate","description","parse","_this2","clubname","tags","officers","meetingdates","components_Error404","SearchResult","react_router_dom","to","name","dangerouslySetInnerHTML","__html","Searching","SearchPage","searchtext","clubs","searching","query","location","search","substring","split","shift","replace","event","key","components_Searching","history","push","toLowerCase","clubres","map","val","components_SearchResult","assign","target","value","length","onKeyPress","processKeyPress","id","type","placeholder","autoComplete","onChange","updateSearchText","onClick","App","components_Navbar","react_router","exact","path","component","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c25cdbff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nlet DEV_URL = 'https://clubsource.herokuapp.com';\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n\tDEV_URL = 'http://localhost:3000';\r\n}\r\n\r\nclass Navbar extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='navbar'>\r\n\t\t\t\t<div className='navcont navleft'>\r\n\t\t\t\t\t<a className='mainlogonav' href={DEV_URL}> clubsource</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='navcont navright'>\r\n\t\t\t\t\t<a className='navlink' href={DEV_URL + '/dashboard'}>Dashboard</a>\r\n\t\t\t\t\t<a className='navlink' href={DEV_URL + '/clubs/search'}> Browse Clubs</a>\r\n\t\t\t\t\t<a className='navlink' href={DEV_URL + '/accounts/logout'}>Log Out</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport Navbar from './Navbar';\r\n\r\nclass Error404 extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className='title'>Page not found</h1>\r\n\t\t\t\t<p>Shit</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Error404;","import React, { Component } from 'react';\r\nimport '../clubview.css';\r\nimport { Parser } from 'html-to-react';\r\nimport Error404 from './Error404';\r\n\r\nlet DEV_URL = 'https://clubsource.herokuapp.com';\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n\tDEV_URL = 'http://localhost:3000';\r\n}\r\n\r\nconsole.log(process.env.NODE_ENV);\r\n\r\nclass ViewClub extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tclub: {},\r\n\t\t\texists: true\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync componentDidMount() {\r\n\t\tvar parser = new Parser();\r\n\t\tvar username = this.props.match.params.username;\r\n\t\tconsole.log({DEV_URL});\r\n\t\tconst res = await fetch(DEV_URL + '/searchData/' + username);\r\n\t\tconst club = await res.json();\r\n\t\tconsole.log(club);\r\n\t\tif (club === 'not found') {\r\n\t\t\tconsole.log('page not found');\r\n\t\t\tthis.setState({exists: false});\r\n\t\t\tthis.forceUpdate(); //probably unnecessary\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tclub.description = parser.parse(club.description);\r\n\t\tthis.setState({club: club});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst ClubPage = () => (\r\n\t\t\t<div className='container-fluid'>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col sidead'>\r\n\t\t\t\t\t\tLeft Ad\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='col'>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h1 className='title'>{this.state.club.clubname}</h1>\r\n\t\t\t\t\t\t\t<p className='username'>{this.state.club.username}</p>\r\n\t\t\t\t\t\t\t<div className='info'>\r\n\t\t\t\t\t\t\t\t<p className='gray'>Tags: {this.state.club.tags}</p>\r\n\t\t\t\t\t\t\t\t<p className='gray'>Officers: {this.state.club.officers}</p>\r\n\t\t\t\t\t\t\t\t<p className='gray'>Meeting dates: {this.state.club.meetingdates}</p>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<div className='quillcontent'>{this.state.club.description}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='col sidead'>\r\n\t\t\t\t\t\tRight Ad\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t);\r\n\t\t\r\n\t\tvar exists = this.state.exists;\r\n\t\tconsole.log(exists);\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{exists ? (<ClubPage />) : (<Error404 />)};\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ViewClub;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SearchResult extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Link to={'clubs/' + this.props.username} className='resultlink'>\r\n\t\t\t\t<div className='fullresult'>\r\n\t\t\t\t\t<div className='resulthead'>\r\n\t\t\t\t\t\t<h1 className='resulttitle'>{this.props.name}</h1>\r\n\t\t\t\t\t\t<p className='taglist'>Tags: {this.props.tags}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='resultbody'>\r\n\t\t\t\t\t\t<p dangerouslySetInnerHTML={{__html: this.props.description}}></p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchResult;","import React, { Component } from 'react';\r\n\r\nclass Searching extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<p>Searching...</p>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Searching;","import React, { Component } from 'react';\r\nimport '../search.css';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchResult from './SearchResult';\r\nimport Searching from './Searching';\r\n\r\nlet DEV_URL = 'https://clubsource.herokuapp.com';\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n\tDEV_URL = 'http://localhost:3000';\r\n}\r\n\r\n/*\r\nTODO: When this component is called:\r\n\t*If there is a query string...\r\n\t\t*Parse it\r\n\t\t*Query the /searchData API with the query string data\r\n\t\t*Sort and present SearchItem components\r\n\t*If there isn't a query string, query the /searchData API for the user's default preferences\r\n\t\t\t*If they exist (the user is logged in and has configured his preferences), sort and present SearchItem components\r\n\t\t\t*If they don't exist, display a message with a link telling them to configure their preferences or put in a search\r\n\r\n\r\n*/\r\n\r\n\r\nclass SearchPage extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsearchtext: '',\r\n\t\t\tclubs: [],\r\n\t\t\tsearching: ''\r\n\t\t};\r\n\t}\r\n\t\r\n\tasync componentDidMount() {\r\n\t\tvar query = this.props.location.search;\r\n\t\tconsole.log('query string: ' + query);\r\n\t\tif (query != '') {\r\n\t\t\tlet search = this.props.location.search.substring(1).split('search=');\r\n\t\t\tsearch.shift();\r\n\t\t\tconsole.log(search[0]);\r\n\t\t\t\r\n\t\t\tawait this.setState({searchtext: search[0].replace(/_/g, ' ')});\r\n\t\t\tthis.search();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprocessKeyPress(event){\r\n\t\tif (event.key == 'Enter')\r\n\t\t\tthis.search();\r\n\t}\r\n\t\r\n\tasync search() {\r\n\t\tthis.setState({clubs: []});\r\n\t\tthis.setState({searching: <Searching />});\r\n\t\tif (this.state.searchtext !== ''){\r\n\t\t\tawait this.props.history.push('?search=' + this.state.searchtext.replace(/ /g, '_'));\r\n\t\t\tlet search = this.props.location.search;\r\n\t\t\tconsole.log('query string: ' + search);\r\n\t\t\tif (search != ''){\r\n\t\t\t\tsearch = search.substring(1).toLowerCase().replace(/ /g, '_');\r\n\t\t\t\tconsole.log('searching for ' + search);\r\n\t\t\t\tconst res = await fetch(DEV_URL + '/searchData/search/' + search);\r\n\t\t\t\tconst clubres = await res.json();\r\n\t\t\t\tthis.setState({clubs: clubres.map((val) => <SearchResult {...val} key={val.username}/>), searching: ''});\r\n\t\t\t\t//TODO: create error handling so that this doesn't break if someone types a poorly formatted query string\r\n\t\t\t\t//TODO: have this query to find the appropriate ads to render\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t}\r\n\t\r\n\tupdateSearchText(event){\r\n\t\tif (event.target.value[event.target.value.length - 1] !== '_')\r\n\t\t\tthis.setState({\r\n\t\t\t\tsearchtext: event.target.value\r\n\t\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className='title'>Find Clubs</h1>\r\n\t\t\t\t<div className='fullsearchwrap'>\r\n\t\t\t\t\t<div className='searchbarwrap'>\r\n\t\t\t\t\t\t<div className='searchbar' onKeyPress={event => this.processKeyPress(event)}>\r\n\t\t\t\t\t\t\t<input id='searchtext' \r\n\t\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\t\tname='search' \r\n\t\t\t\t\t\t\t\tplaceholder='Find a club...' \r\n\t\t\t\t\t\t\t\tautoComplete='off' \r\n\t\t\t\t\t\t\t\tonChange={event => this.updateSearchText(event)} \r\n\t\t\t\t\t\t\t\tvalue={this.state.searchtext} />\r\n\t\t\t\t\t\t\t<button className='bigbutton' id='searchbutton' onClick={() => this.search()}>Search</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='container-fluid'>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col sidead'>\r\n\t\t\t\t\t\t\tLeft Ad\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className='col'>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{this.state.searching}\r\n\t\t\t\t\t\t\t{this.state.clubs}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className='col sidead'>\r\n\t\t\t\t\t\t\tRight Ad\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchPage;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ViewClub from './components/ViewClub';\nimport SearchPage from './components/SearchPage';\nimport Navbar from './components/Navbar';\n\nlet DEV_URL = '';\n\nif (process.env.NODE_ENV === 'development') {\n\tDEV_URL = 'http://localhost:3000';\n}\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t//users: []\n\t\t};\n\t}\n\t/*async componentDidMount() {\n\t\t// Call self-hosted API to get users response\n\t\tconst res = await fetch(`${DEV_URL}/searchData`);\n\t\tconst users = await res.json();\n\t\tthis.setState({\n\t\t\tusers\n\t\t});\n\t}*/\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/clubs/:username' component={ViewClub} />\n\t\t\t\t\t<Route exact path='/clubs' component={SearchPage} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport './reactstyles.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n\n\nReactDOM.render((\n\t<Router>\n\t\t<App />\n\t</Router>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}